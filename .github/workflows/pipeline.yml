name: Deployment pipeline

env:
  SKIP_PIPELINE: ${{ github.event_name == 'push' && contains(github.event.head_commit.message, '#skip') }}

on:
  push:
    branches:
      - main

  pull_request:
    branches: [main]
    types: [opened, synchronize]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.event_name }}
  cancel-in-progress: true

jobs:
  backend:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Install dependencies
        run: npm ci
      - name: Check style
        run: npm run lint
      - name: Run tests
        run: npm run test
        env:
          MONGODB_URI: ${{ secrets.MONGODB_URI }}
          TEST_MONGODB_URI: ${{ secrets.TEST_MONGODB_URI }}
          PORT: ${{ secrets.PORT }}
          SECRET: ${{ secrets.SECRET }}

  frontend:
    timeout-minutes: 10
    runs-on: ubuntu-latest
    needs: backend
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Install frontend dependencies
        working-directory: ./frontend
        run: npm ci
      - name: Install playwright
        working-directory: ./frontend
        run: npx playwright install --with-deps
      - name: Check style
        working-directory: ./frontend
        run: npm run lint
      - name: Run tests
        working-directory: ./frontend
        run: npm --prefix .. ci && npm run test
        env:
          MONGODB_URI: ${{ secrets.MONGODB_URI }}
          TEST_MONGODB_URI: ${{ secrets.TEST_MONGODB_URI }}
          PORT: ${{ secrets.PORT }}
          SECRET: ${{ secrets.SECRET }}
      - uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

  deploy:
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    needs: [backend, frontend]
    runs-on: ubuntu-latest
    steps:
      - name: Trigger deployment
        run: curl https://api.render.com/deploy/srv-${{ secrets.RENDER_SERVICE_ID }}?key=${{ secrets.RENDER_API_KEY }}

  tag_release:
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    needs: [backend, frontend]
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Bump version and push tag
        if: env.SKIP_PIPELINE != 'true'
        uses: anothrNick/github-tag-action@e528bc2b9628971ce0e6f823f3052d1dcd9d512c
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAG_PREFIX: v
          DEFAULT_BUMP: patch
          INITIAL_VERSION: 0.0.0


  webhook:
    runs-on: ubuntu-latest
    needs: [backend, frontend]
    if: always()
    steps:
      - name: Send Discord notification
        uses: sarisia/actions-status-discord@v1
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          status: ${{ (needs.backend.result == 'success' && needs.frontend.result == 'success') && 'success' || 'failure' }}
